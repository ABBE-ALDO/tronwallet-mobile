fastlane_version "2.81.0"

default_platform :ios

platform :ios do
  before_all do
    require File.join(File.dirname(__FILE__), 'environment')
  end

  desc "Submit a new Beta Build to Apple TestFlight"

  desc "Runs all the tests"
  lane :test do
    # sh "cd ..; yarn test"
    sh "cd ..; yarn lint"
  end



  lane :upgrade do
    sh "yarn run postversion"

    git_add(path: ".")
    git_commit(path: ".", message: "Version Bump [ci skip]")
    push_to_git_remote(tags: false, remote_branch: "feat/fastlane-setup")
  end

  lane :realm do
    sh "rm -rf ../node_modules/realm"
    sh "pwd"
    sh "tar -xzvf ../ios/customLibs/realm.tar.gz -C ../node_modules/"
  end

  lane :build do
    Environment::Public.new.build

    # update_app_identifier
    # match
    # get_provisioning_profile
    # update_project_provisioning
    # gym
    # pilot

    # sh "rm -rf #{ENV["FL_PROJECT_PROVISIONING_PROFILE_FILE"]}"

    # slack(
    #   message: "Successfully deployed new App Update on #{ENV["ENVIRONMENT"]} environment."
    # )
  end

  after_all do |lane|
    # Hook that runs after each lane
  end

  error do |lane, exception|
    # slack(
    #   message: exception.message,
    #   success: false
    # )
  end
end

platform :android do
  before_all do
    require File.join(File.dirname(__FILE__), 'environment')
  end

  desc "Submit a new Beta to Android Beta Testers"

  desc "Runs all tests"
  lane :test do
    sh "cd ..; yarn lint"
  end

  lane :upgrade do
    sh "cd ..; npm version patch --no-git-tag-version"
    sh "cd ..; yarn run postversion"

    git_add(path: ".")
    git_commit(path: ".", message: "Version Bump [ci skip]")
    push_to_git_remote(tags: false, remote_branch: "feat/fastlane-setup")
  end

  lane :build do
    Environment::Public.new.build

    gradle(task: 'clean', project_dir: './android/')

    gradle(
      project_dir: "./android",
      task: 'assemble',
      build_type: 'Release'
    )

    supply(track: 'beta', track_promote_to: 'beta')
  end

end
