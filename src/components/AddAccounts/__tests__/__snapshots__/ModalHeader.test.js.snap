// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Modal header component Should match when render component 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <ModalHeader
    onClose={[Function]}
    title="Unit test"
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "class",
    "props": Object {
      "align": "center",
      "children": Array [
        <Styled(View)
          align="stretch"
          flex={1}
          justify="flex-start"
          marginBottom={3}
        >
          <FontelloButton
            color="#FFFFFF"
            name="close"
            onPress={[Function]}
            padding={0}
            size={13}
          />
        </Styled(View)>,
        <Styled(View)
          align="center"
          flex={2}
          justify="flex-start"
        >
          <Styled(Text)
            color="#9c9eb9"
            font="medium"
            size="small"
          >
            Unit test
          </Styled(Text)>
        </Styled(View)>,
        <Styled(View)
          align="stretch"
          flex={1}
          justify="flex-start"
        />,
      ],
      "justify": "flex-start",
      "marginBottom": 20,
      "marginTop": 15,
      "vertical": true,
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {
          "align": "stretch",
          "children": <FontelloButton
            color="#FFFFFF"
            name="close"
            onPress={[Function]}
            padding={0}
            size={13}
          />,
          "flex": 1,
          "justify": "flex-start",
          "marginBottom": 3,
        },
        "ref": null,
        "rendered": Object {
          "instance": null,
          "key": undefined,
          "nodeType": "function",
          "props": Object {
            "color": "#FFFFFF",
            "name": "close",
            "onPress": [Function],
            "padding": 0,
            "size": 13,
          },
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
        "type": [Function],
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {
          "align": "center",
          "children": <Styled(Text)
            color="#9c9eb9"
            font="medium"
            size="small"
          >
            Unit test
          </Styled(Text)>,
          "flex": 2,
          "justify": "flex-start",
        },
        "ref": null,
        "rendered": Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "children": "Unit test",
            "color": "#9c9eb9",
            "font": "medium",
            "size": "small",
          },
          "ref": null,
          "rendered": "Unit test",
          "type": [Function],
        },
        "type": [Function],
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {
          "align": "stretch",
          "flex": 1,
          "justify": "flex-start",
        },
        "ref": null,
        "rendered": null,
        "type": [Function],
      },
    ],
    "type": [Function],
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "class",
      "props": Object {
        "align": "center",
        "children": Array [
          <Styled(View)
            align="stretch"
            flex={1}
            justify="flex-start"
            marginBottom={3}
          >
            <FontelloButton
              color="#FFFFFF"
              name="close"
              onPress={[Function]}
              padding={0}
              size={13}
            />
          </Styled(View)>,
          <Styled(View)
            align="center"
            flex={2}
            justify="flex-start"
          >
            <Styled(Text)
              color="#9c9eb9"
              font="medium"
              size="small"
            >
              Unit test
            </Styled(Text)>
          </Styled(View)>,
          <Styled(View)
            align="stretch"
            flex={1}
            justify="flex-start"
          />,
        ],
        "justify": "flex-start",
        "marginBottom": 20,
        "marginTop": 15,
        "vertical": true,
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "align": "stretch",
            "children": <FontelloButton
              color="#FFFFFF"
              name="close"
              onPress={[Function]}
              padding={0}
              size={13}
            />,
            "flex": 1,
            "justify": "flex-start",
            "marginBottom": 3,
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "function",
            "props": Object {
              "color": "#FFFFFF",
              "name": "close",
              "onPress": [Function],
              "padding": 0,
              "size": 13,
            },
            "ref": null,
            "rendered": null,
            "type": [Function],
          },
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "align": "center",
            "children": <Styled(Text)
              color="#9c9eb9"
              font="medium"
              size="small"
            >
              Unit test
            </Styled(Text)>,
            "flex": 2,
            "justify": "flex-start",
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "children": "Unit test",
              "color": "#9c9eb9",
              "font": "medium",
              "size": "small",
            },
            "ref": null,
            "rendered": "Unit test",
            "type": [Function],
          },
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "align": "stretch",
            "flex": 1,
            "justify": "flex-start",
          },
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
      ],
      "type": [Function],
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenThreeAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getDerivedStateFromProps": true,
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
    "disableLifecycleMethods": true,
  },
}
`;
