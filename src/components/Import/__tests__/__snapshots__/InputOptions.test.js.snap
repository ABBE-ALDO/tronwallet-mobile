// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Input options component Should match when render component 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <InputOptions
    onPaste={[Function]}
    onPressScanner={[Function]}
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "function",
    "props": Object {
      "children": Array [
        <IconButton
          bg="#2E2F47"
          highlight={false}
          icon="md-clipboard"
          iconColor="#9C9EB9"
          onPress={[Function]}
        />,
        <Styled(View)
          size="small"
        />,
        <IconButton
          bg="#2E2F47"
          highlight={false}
          icon="ios-qr-scanner"
          iconColor="#9C9EB9"
          onPress={[Function]}
        />,
      ],
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "function",
        "props": Object {
          "bg": "#2E2F47",
          "highlight": false,
          "icon": "md-clipboard",
          "iconColor": "#9C9EB9",
          "onPress": [Function],
        },
        "ref": null,
        "rendered": null,
        "type": [Function],
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {
          "size": "small",
        },
        "ref": null,
        "rendered": null,
        "type": [Function],
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "function",
        "props": Object {
          "bg": "#2E2F47",
          "highlight": false,
          "icon": "ios-qr-scanner",
          "iconColor": "#9C9EB9",
          "onPress": [Function],
        },
        "ref": null,
        "rendered": null,
        "type": [Function],
      },
    ],
    "type": Symbol(react.fragment),
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "function",
      "props": Object {
        "children": Array [
          <IconButton
            bg="#2E2F47"
            highlight={false}
            icon="md-clipboard"
            iconColor="#9C9EB9"
            onPress={[Function]}
          />,
          <Styled(View)
            size="small"
          />,
          <IconButton
            bg="#2E2F47"
            highlight={false}
            icon="ios-qr-scanner"
            iconColor="#9C9EB9"
            onPress={[Function]}
          />,
        ],
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "function",
          "props": Object {
            "bg": "#2E2F47",
            "highlight": false,
            "icon": "md-clipboard",
            "iconColor": "#9C9EB9",
            "onPress": [Function],
          },
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "size": "small",
          },
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "function",
          "props": Object {
            "bg": "#2E2F47",
            "highlight": false,
            "icon": "ios-qr-scanner",
            "iconColor": "#9C9EB9",
            "onPress": [Function],
          },
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
      ],
      "type": Symbol(react.fragment),
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenThreeAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getDerivedStateFromProps": true,
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
    "disableLifecycleMethods": true,
  },
}
`;
